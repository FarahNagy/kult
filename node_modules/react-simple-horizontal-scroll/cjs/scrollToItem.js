"use strict";
exports.__esModule = true;
exports.scrollToItem = void 0;
function scrollToItem(index, wrapperRef, activeDataAttribute) {
    if ((wrapperRef === null || wrapperRef === void 0 ? void 0 : wrapperRef.current) && typeof wrapperRef.current.scrollTo === 'function') {
        var scrollItem = wrapperRef.current.children.item(index);
        if (scrollItem) {
            // needs to be calulated here because offset prop can be every unit of measurement and we need pixels here
            var paddingWrapper = parseFloat(window.getComputedStyle(wrapperRef.current).paddingLeft);
            // reset active
            if (activeDataAttribute !== undefined) {
                var items = wrapperRef.current.querySelectorAll("[".concat(activeDataAttribute, "]"));
                items.forEach(function (item) {
                    item.setAttribute(activeDataAttribute, 'false');
                });
                scrollItem.setAttribute(activeDataAttribute, 'true');
            }
            // calculate offset left
            var offsetLeft = scrollItem.offsetLeft - paddingWrapper;
            wrapperRef.current.scrollTo({ left: offsetLeft });
        }
    }
}
exports.scrollToItem = scrollToItem;
//# sourceMappingURL=scrollToItem.js.map